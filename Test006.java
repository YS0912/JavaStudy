/*=====================================
	■■■ 변수와 자료형 ■■■
	형 변환 / 접미사 활용
=====================================*/

public class Test006
{
	public static void main(String[] args)
	{
		int a;
		a = 10;
		System.out.println("a 의 결과 : " + a);

		int b = 20;
		System.out.println("b 의 결과 : " + b);

		short c;

		// 연산 및 처리 (대입 연산)
		// c = a;
		// -- 상수 형태에서 처리할 때는 int를 short에 선언하는 것 가능		short a = 10;
		// -- But 대입 연산에서는 불가능 → ★형 변환 필요★

		// 명시적인 형 변환 (강제 형 변환)
		c = (short)a;
		// -- a 가 가지고 있는 데이터를 short 형으로 형 변환을 수행한 후 대입

		// 00000000 00000000 00000000 00001010 → int 형 a 변수 10
		//		↓ 형 변환
		// 00000000 00001010

		// 결과 출력
		System.out.println("c 의 결과 : " + c);
		// → c 의 결과 : 10

		// 변수 선언 및 초기화
		// int d = 10000000000;		백억
		// → 컴파일 에러

		// long d = 10000000000;
		// → 컴파일 에러
		// -- Java에서 상수를 저장할 때 int 사용

		long d = 10000000000l;
		// → 접미사 『L』이 중요
		// long 형은 숫자(상수) 뒤에 『L』 또는 『l』을 붙여 상수를 표현
		// 즉, 21억 이상의 정수 형태 상수에는 데이터 뒤에 접미사를 ★꼭★ 붙이자

		System.out.println("d의 결과 : " + d);
		// → d의 결과 : 10000000000


		// 변수 선언 및 초기화
		int e = 030;

		// 결과 출력
		System.out.println("e 의 결과 : " + e);
		// → e 의 결과 : 24
		// 접두사 『0』: 8진수


		// 변수 선언 및 초기화
		int f = 0xa6;

		// 결과 출력
		System.out.println("f의 결과 : " + f);
		// → f의 결과 : 166
		// 접두사 『0x』: 16진수


		// 변수 선언 및 초기화
		//float g = 0.0;
		float g = 0;

		// 결과 출력
		System.out.println("g 의 결과 : " + g);
		// → 컴파일 에러
		// -- Java가 실수는 double로 저장
		// -- 자동 형 변환 규칙에 위반되어서 float에는 들어갈 수 X


		// 최종 결과 출력
		/*
			a 의 결과 : 10
			b 의 결과 : 20
			c 의 결과 : 10
			d의 결과 : 10000000000
			e 의 결과 : 24
			f의 결과 : 166
			g 의 결과 : 0.0
		*/
	}
}