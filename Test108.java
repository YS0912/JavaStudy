/*===================================================================
						정렬(Sort) 알고리즘
===================================================================*/

/*
○ 정렬
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위해
		→ 보기 좋게 검색하기 위함!

○ 정렬의 종류
	: 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬, etc...
*/

// 버블 정렬(Bubble Sort)

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62
// 계속하려면 아무 키나 누르세요...

public class Test108
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};
		/*
			52, 42, 12, 62, 60
			==	--

			42, 52, 12, 62, 60
				==	--

			42, 12, 52, 62, 60
					==	--

			42, 12, 52, 62, 60
						==	--

			------------------- 1회전 웅~

			42, 12, 52, 60, 62
			==	--

			12, 42, 52, 60, 62
				==	--
			
			12, 42, 52, 60, 62
					==	--

			------------------- 2회전 웅~
			
			12, 42, 52, 60, 62
			==	--
					:
		*/

		// Source data 출력
		System.out.print("Source Date : ");
		for (int n : a)
			System.out.print(n + " ");
		System.out.println();

		// 정렬
		for (int i=1; i<a.length; i++)				// -- 뒤에서부터 비교기준 제외 대상을 하나씩 추가
		{
			for (int j=0; j<a.length-i; j++)		// -- 비교기준 위치 선정
			{
				if (a[j] > a[j+1])
				{
					a[j] = a[j]^a[j+1];
					a[j+1] = a[j+1]^a[j];
					a[j] = a[j]^a[j+1];
				}
			}
		}

		// Sorted data 출력
		System.out.print("Sorted Date : ");
		for (int n : a)
			System.out.print(n + " ");
		System.out.println();
	}
	
}

// 최종 결과
/*
	Source Date : 52 42 12 62 60
	Sorted Date : 12 42 52 60 62
	계속하려면 아무 키나 누르십시오 . . .
*/