/*===================================================================
				■■■ 실행 흐름의 컨트롤 (제어문) ■■■
	반복문(for) 실습 및 관찰
	다중 for문(반복문의 중첩)을 활용한 구구단 출력 실습
===================================================================*/

// 실행 예)
/*
2 * 1 =	2	3 * 1 =	3	4 * 1 =	4	5 * 1 = 5
2 * 2 =	4	3 * 2 =	6	4 * 2 =	8	5 * 2 = 10
2 * 3 =	6	3 * 3 =	9	4 * 3 =	12	5 * 3 = 15
2 * 4 =	8	3 * 4 =	12	4 * 4 =	16	5 * 4 = 20
2 * 5 =	10	3 * 5 =	15	4 * 5 =	20	5 * 5 = 25
2 * 6 =	12	3 * 6 =	18	4 * 6 =	24	5 * 6 = 30
2 * 7 =	14	3 * 7 =	21	4 * 7 =	28	5 * 7 = 35
2 * 8 =	16	3 * 8 =	24	4 * 8 =	32	5 * 8 = 40
2 * 9 =	18	3 * 9 =	27	4 * 9 =	36	5 * 9 = 45
				    	:
				    	:
*/

public class Test060
{
	public static void main(String[] args)
	{
		// 내 풀이 ----------------------------------------------------------------------
		
		/*
		// ① 이중첩
		for (int m=1; m<=9; m++)
		{
			for (int n=2; n<=5; n++)
			{
				if(n!=5)
					System.out.printf("%d * %d = %d	", n, m, (n*m));
				else if(n==5)
					System.out.printf("%d * %d = %d%n", n, m, (n*m));
			}
		}
		
		System.out.println();

		for (int m=1; m<=9; m++)
		{
			for (int n=6; n<=9; n++)
			{
				if(n!=9)
					System.out.printf("%d * %d = %d	", n, m, (n*m));
				else if(n==9)
					System.out.printf("%d * %d = %d%n", n, m, (n*m));
			}
		}

		System.out.println();

		// ② 삼중첩
		for (int i=0; i<=4; i+=4)
		{
			for (int m=1; m<=9; m++)
			{
				for (int n=2; n<=5; n++)
				{
					System.out.printf("%d * %d = %d\t", (i+n), m, ((i+n)*m));
				}
				
				System.out.println();
			}

			System.out.println();
		}
		*/


		// 선생님 풀이

		// ① Test059와 비교하여 출력 방향(순서)이 다르기 때문에
		//	  반복문의 제어 흐름도 달라져야 한다
		//	  (콘솔 기반의 출력 환경이기 때문에...)

		// ② (1)에 따라,
		//	  단과 곱해지는 수의 위치가 달라진 상태에서의 반복문 구성
		
		/*
		for (int i=1; i<=9; i++)			// 웅 → 곱해지는 수 1 2 3 4 5 6 7 8 9
		{
			for (int j=2; j<=5; j++)		// 슝 → 단 2 3 4 5
			{
				System.out.printf("%4d * %d = %2d", j, i, (j*i));
			}
			System.out.println();				// 개행
		}

		System.out.println();

		for (int i=1; i<=9; i++)			// 웅 → 곱해지는 수 1 2 3 4 5 6 7 8 9
		{
			for (int j=6; j<=9; j++)		// 슝 → 단 6 7 8 9
			{
				System.out.printf("%4d * %d = %2d", j, i, (j*i));
			}
			System.out.println();
		}
		*/

		
		// ③ (2)에서 처리한 결과를 두 문단으로 반복하는 반복문 구성
		//	  반복문에 (2)의 결과를 삽입

		/*
		for (int h=0; h<=1; h++)
		{
			// System.out.println("테스트 " + h);

			for (int i=1; i<=9; i++)			// 웅 → 곱해지는 수 1 2 3 4 5 6 7 8 9
			{
				for (int j=2; j<=5; j++)		// 슝 → 단 2 3 4 5
				{
				System.out.printf("%4d * %d = %2d", j, i, (j*i));
				}
				System.out.println();
			}
			System.out.println();
		}
		*/

		// ④ 같은 구문을 두 문단으로 나누어 처리하는 과정에서
		//	  문단에 따라 다르게 주어지는 환경(h의 값)을 활용하는 방법으로
		//	  최종 반복문 3중첩 구성
		
		/*
		for (int h=0; h<=1; h++)				// 문단 구성 → 0 1 : 두 번 반복
		{
			for (int i=1; i<=9; i++)			// 곱해지는 수 → 1 2 3 4 5 6 7 8 9 : 9번 반복
			{
				for (int j=2; j<=5; j++)		// 단  구성 → 2 3 4 5 : 
				{
					System.out.printf("%4d * %d = %2d", j+(h*4), i, (j+(h*4)*i));
				}
				System.out.println();
			}
			System.out.println();
		}
		*/


		// Type B

		int a, b, c;
		for (a=2; a<=6; a+=4)
		{
			for (b=1; b<=9; b++)
			{
				for (c=a; c<=(a+3); c++)
				{
					System.out.printf("%4d * %d = %2d", c, b, (c*b));
				}
				System.out.println();
			}
			System.out.println();
		}

	}
}

// 최종 결과
/*
	   2 * 1 =  2   3 * 1 =  3   4 * 1 =  4   5 * 1 =  5
	   2 * 2 =  2   3 * 2 =  3   4 * 2 =  4   5 * 2 =  5
	   2 * 3 =  2   3 * 3 =  3   4 * 3 =  4   5 * 3 =  5
	   2 * 4 =  2   3 * 4 =  3   4 * 4 =  4   5 * 4 =  5
	   2 * 5 =  2   3 * 5 =  3   4 * 5 =  4   5 * 5 =  5
	   2 * 6 =  2   3 * 6 =  3   4 * 6 =  4   5 * 6 =  5
	   2 * 7 =  2   3 * 7 =  3   4 * 7 =  4   5 * 7 =  5
	   2 * 8 =  2   3 * 8 =  3   4 * 8 =  4   5 * 8 =  5
	   2 * 9 =  2   3 * 9 =  3   4 * 9 =  4   5 * 9 =  5

	   6 * 1 =  6   7 * 1 =  7   8 * 1 =  8   9 * 1 =  9
	   6 * 2 = 10   7 * 2 = 11   8 * 2 = 12   9 * 2 = 13
	   6 * 3 = 14   7 * 3 = 15   8 * 3 = 16   9 * 3 = 17
	   6 * 4 = 18   7 * 4 = 19   8 * 4 = 20   9 * 4 = 21
	   6 * 5 = 22   7 * 5 = 23   8 * 5 = 24   9 * 5 = 25
	   6 * 6 = 26   7 * 6 = 27   8 * 6 = 28   9 * 6 = 29
	   6 * 7 = 30   7 * 7 = 31   8 * 7 = 32   9 * 7 = 33
	   6 * 8 = 34   7 * 8 = 35   8 * 8 = 36   9 * 8 = 37
	   6 * 9 = 38   7 * 9 = 39   8 * 9 = 40   9 * 9 = 41

	계속하려면 아무 키나 누르십시오 . . .
*/