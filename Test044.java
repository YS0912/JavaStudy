/*===================================================================
				■■■ 실행 흐름의 컨트롤 (제어문) ■■■
	반복문 실습 및 관찰
===================================================================*/

/*
○ 반복문의 개요

	- 주어진 조건이 『참』인 경우, 일정한 영역의 문장을 반복 수행하다가
	  조건식이 거짓이 되는 순산이 오면 반복 수행을 중단하는 문장
	- 이러한 반복문에는 『while』『do~while』『for』문 등이 있으며,
	  반복의 제어를 위해 『break』『continue』문을 사용하는 경우가 있다

○ while 문

	- 조건식을 먼저 비교하여 조건식의 처리 결과가 참인 경우, 특정 영역을 반복 수행하는 문장
	- 반복 횟수가 정해져 있지 않은 경우나 반복 횟수가 많은 경우 주로 사용
	- while 문은 조건이 맞지 않은 경우 반복은 커녕 한 번도 실행 되지 않을 수 있다

○ while 형태
	
	while(조건문)
	{
		실행문
	}
*/

public class Test044
{
	public static void main(String[] args)
	{
		/*
		int n=0;

		while (n<=10)
		{
			System.out.println("n=" + n);
			n++;
		}
		*/

		/*
		int n=0;

		while (n<=10)
		{
			n++;
			System.out.println("n=" + n);
		}
		*/
		
		/*
		int n=0;

		while (n++<=10)
		{
			System.out.println("n=" + ++n);
		}
		*/
	
		/*
		int n=1;

		while (n<10)
		{
			System.out.println("n=" + n);
			n++;
		}
		*/


		// 1 부터 100 까지의 합을 계산하여 결과를 출력하는 프로그램 구현
		// 단, while 반목문을 사용

		// 실행 예)
		// 1부터 100까지의 합 : 5050
		// 계속하려면 아무 키나...


		// 내 풀이 ----------------------------------------------------------------------
		
		/*
		int n=0, result=0;

		while (n<=100)
		{
			result = result + n;
			n++;
		}

		System.out.printf("1부터 100까지의 합 : %d%n", result);
		*/

		// 선생님 풀이 ------------------------------------------------------------------

		// ★ 문제 인식 및 분석
		// 1. 출력 구분이 반복문의 영역 밖에 위치해야 함
		// 2. 1부터 1씩 증가할 변수와 누적합을 담을 변수가 필요

		// 1부터 차례로 담아서 1씩 증가하는 변수 선언 및 초기화
		int n=0;

		// 누적합을 계산하여 담아낼 변수 선언 및 초기화
		int sum=0;

		// 연산 및 처리(반복문 구성)
		while (n<100)
		{
			n++;
			sum += n;

			/*
			// sum을 n만큼 증가						-- int n=1; / n<100 의 경우
			sum += n;

			// n이 1씩 증가해 나가는 연산
			n++;
			*/
		}

		// 결과 출력
		System.out.println("1부터 100까지의 합 : " + sum);
	}
}

// 최종 결과

/*
	1부터 100까지의 합 : 5050
	계속하려면 아무 키나 누르십시오 . . .
*/